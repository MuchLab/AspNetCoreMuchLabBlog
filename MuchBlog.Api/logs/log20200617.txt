2020-06-17 19:33:56.140 +08:00 [INF] Starting web host
2020-06-17 19:34:01.243 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:36:52.562 +08:00 [INF] Starting web host
2020-06-17 19:37:00.208 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IRepositoryWrapper Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.RepositoryWrapper': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

 ---> (Inner Exception #2) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IRepositoryWrapper Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.RepositoryWrapper': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:42:41.037 +08:00 [INF] Starting web host
2020-06-17 19:42:42.270 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:43:55.468 +08:00 [INF] Starting web host
2020-06-17 19:43:58.386 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:48:27.646 +08:00 [INF] Starting web host
2020-06-17 19:48:29.740 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:52:10.028 +08:00 [INF] Starting web host
2020-06-17 19:52:12.429 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Singleton ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Singleton ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 19:57:38.117 +08:00 [INF] Starting web host
2020-06-17 19:57:39.143 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 20:16:14.521 +08:00 [INF] Starting web host
2020-06-17 20:16:29.687 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 20:18:42.247 +08:00 [INF] Starting web host
2020-06-17 20:19:02.818 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 20:38:40.545 +08:00 [INF] Starting web host
2020-06-17 20:38:41.491 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 20:46:18.256 +08:00 [INF] Starting web host
2020-06-17 20:46:19.415 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 37
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 21:23:24.375 +08:00 [INF] Starting web host
2020-06-17 21:23:25.663 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 21:25:07.531 +08:00 [INF] Starting web host
2020-06-17 21:33:55.369 +08:00 [INF] Starting web host
2020-06-17 21:33:57.487 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 21:47:11.756 +08:00 [INF] Starting web host
2020-06-17 21:47:13.644 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 21:55:33.524 +08:00 [INF] Starting web host
2020-06-17 21:55:35.969 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 21:57:17.264 +08:00 [INF] Starting web host
2020-06-17 21:57:18.495 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 22:07:59.356 +08:00 [INF] Starting web host
2020-06-17 22:07:59.627 +08:00 [FTL] Host terminated error
System.AggregateException: Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.) (Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.)
 ---> System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IUserRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.UserRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options)
   at Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(IServiceCollection containerBuilder)
   at Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1.CreateServiceProvider(Object containerBuilder)
   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at MuchBlog.Api.Program.Main(String[] args) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Program.cs:line 33
 ---> (Inner Exception #1) System.InvalidOperationException: Error while validating the service descriptor 'ServiceType: MuchBlog.Domain.Services.IService.IEssayRepository Lifetime: Scoped ImplementationType: MuchBlog.Domain.Services.EssayRepository': Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'MuchBlog.Domain.Services.EssayRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.ValidateService(ServiceDescriptor descriptor)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(IEnumerable`1 serviceDescriptors, ServiceProviderOptions options)<---

2020-06-17 22:14:41.385 +08:00 [INF] Starting web host
2020-06-17 22:14:41.966 +08:00 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address https://127.0.0.1:5001: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: 通常每个套接字地址(协议/网络地址/端口)只允许使用一次。
 ---> System.Net.Sockets.SocketException (10048): 通常每个套接字地址(协议/网络地址/端口)只允许使用一次。
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2020-06-17 22:15:00.232 +08:00 [INF] Starting web host
2020-06-17 22:15:00.555 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:15:00.560 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:15:00.561 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:15:00.563 +08:00 [INF] Hosting environment: Development
2020-06-17 22:15:00.564 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:17:19.886 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:17:19.923 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:17:19.995 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:17:20.843 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:17:22.871 +08:00 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:17:22.967 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 2964.2376ms
2020-06-17 22:17:22.971 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:17:22.979 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
InternalDbSet`1 -> IEnumerable`1
Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[MuchBlog.Infrastructure.Entities.User, MuchBlog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
 ---> AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
User -> UserDto
MuchBlog.Infrastructure.Entities.User -> MuchBlog.Api.Dtos.UserDto
   at lambda_method(Closure , User , UserDto , ResolutionContext )
   at lambda_method(Closure , InternalDbSet`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , InternalDbSet`1 , IEnumerable`1 , ResolutionContext )
   at lambda_method(Closure , Object , Object , ResolutionContext )
   at MuchBlog.Api.Controllers.UserController.GetUsersAsync() in D:\AspNetCore\MuchBlog\MuchBlog.Api\Controllers\UserController.cs:line 31
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 22:17:23.052 +08:00 [INF] Request finished in 3168.6313ms 500 text/plain
2020-06-17 22:18:23.350 +08:00 [INF] Application is shutting down...
2020-06-17 22:18:35.638 +08:00 [INF] Starting web host
2020-06-17 22:18:38.211 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:18:38.215 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:18:38.217 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:18:38.218 +08:00 [INF] Hosting environment: Development
2020-06-17 22:18:38.219 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:18:46.397 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:18:46.443 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:18:46.516 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:18:57.362 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:19:44.315 +08:00 [INF] Starting web host
2020-06-17 22:19:46.113 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:19:46.118 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:19:46.119 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:19:46.120 +08:00 [INF] Hosting environment: Development
2020-06-17 22:19:46.121 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:19:49.486 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:19:49.548 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:19:49.670 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:19:57.401 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:20:09.357 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:20:21.177 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:20:21.355 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 31672.5327ms
2020-06-17 22:20:21.364 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:20:21.374 +08:00 [ERR] An unhandled exception has occurred while executing the request.
AutoMapper.AutoMapperMappingException: Error mapping types.

Mapping types:
InternalDbSet`1 -> IEnumerable`1
Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[MuchBlog.Infrastructure.Entities.User, MuchBlog.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.IEnumerable`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
 ---> AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
User -> UserDto
MuchBlog.Infrastructure.Entities.User -> MuchBlog.Api.Dtos.UserDto
   at lambda_method(Closure , User , UserDto , ResolutionContext )
   at lambda_method(Closure , InternalDbSet`1 , IEnumerable`1 , ResolutionContext )
   --- End of inner exception stack trace ---
   at lambda_method(Closure , InternalDbSet`1 , IEnumerable`1 , ResolutionContext )
   at lambda_method(Closure , Object , Object , ResolutionContext )
   at MuchBlog.Api.Controllers.UserController.GetUsersAsync() in D:\AspNetCore\MuchBlog\MuchBlog.Api\Controllers\UserController.cs:line 31
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 22:20:21.496 +08:00 [INF] Request finished in 32014.0314ms 500 text/plain
2020-06-17 22:23:05.546 +08:00 [INF] Starting web host
2020-06-17 22:23:07.300 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:23:07.304 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:23:07.305 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:23:07.306 +08:00 [INF] Hosting environment: Development
2020-06-17 22:23:07.307 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:23:10.685 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:23:10.734 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:23:10.839 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:26:45.086 +08:00 [INF] Starting web host
2020-06-17 22:26:49.197 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:26:49.207 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:26:49.209 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:26:49.210 +08:00 [INF] Hosting environment: Development
2020-06-17 22:26:49.212 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:26:55.377 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:26:55.487 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:26:55.627 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:27:02.793 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:27:12.613 +08:00 [INF] Executed DbCommand (208ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:27:15.520 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:27:20.417 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:27:20.775 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 25045.8851ms
2020-06-17 22:27:20.796 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:27:20.812 +08:00 [INF] Request finished in 25441.1099ms 200 application/json; charset=utf-8
2020-06-17 22:28:40.565 +08:00 [INF] Starting web host
2020-06-17 22:28:42.902 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:28:42.912 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:28:43.048 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:28:43.054 +08:00 [INF] Hosting environment: Development
2020-06-17 22:28:43.061 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:28:53.130 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 189
2020-06-17 22:28:53.184 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:28:53.332 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:28:55.711 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:28:58.755 +08:00 [INF] Executed DbCommand (609ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:28:58.898 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:28:59.186 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 5832.8179ms
2020-06-17 22:28:59.191 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:28:59.201 +08:00 [INF] Request finished in 6072.5619ms 200 application/json; charset=utf-8
2020-06-17 22:29:15.005 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4 application/json 189
2020-06-17 22:29:15.011 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:29:15.051 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:29:15.135 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:29:15.584 +08:00 [INF] Executed DbCommand (187ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:29:15.618 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:29:15.623 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 569.5074ms
2020-06-17 22:29:15.641 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:29:15.651 +08:00 [INF] Request finished in 645.89ms 200 application/json; charset=utf-8
2020-06-17 22:31:24.963 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 129
2020-06-17 22:31:24.971 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:31:24.984 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:31:25.292 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 302.5508ms
2020-06-17 22:31:25.296 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:31:25.305 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at MuchBlog.Api.Controllers.UserController.CreateUser(UserForCreationDto userForCreationDto) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Controllers\UserController.cs:line 50
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 22:31:25.457 +08:00 [INF] Request finished in 494.0456ms 500 text/plain
2020-06-17 22:32:14.016 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 189
2020-06-17 22:32:14.031 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:14.050 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:32:14.061 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2020-06-17 22:32:14.063 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 8.2933ms
2020-06-17 22:32:14.070 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:14.073 +08:00 [INF] Request finished in 57.4565ms 400 text/plain; charset=utf-8
2020-06-17 22:32:25.973 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 190
2020-06-17 22:32:26.075 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:26.080 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:32:26.088 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2020-06-17 22:32:26.093 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 6.0463ms
2020-06-17 22:32:26.098 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:26.100 +08:00 [INF] Request finished in 127.446ms 400 text/plain; charset=utf-8
2020-06-17 22:32:52.322 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 190
2020-06-17 22:32:52.650 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:52.755 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:32:52.904 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:32:53.300 +08:00 [INF] Executed DbCommand (129ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTimeOffset), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 16), @p5='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [BirthDate], [BirthPlace], [Email], [Password], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2020-06-17 22:32:53.365 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:32:53.427 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 555.516ms
2020-06-17 22:32:53.584 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:32:53.586 +08:00 [INF] Request finished in 1264.5771ms 201 application/json; charset=utf-8
2020-06-17 22:33:23.559 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 159
2020-06-17 22:33:23.672 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:33:23.674 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:33:23.683 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:33:23.916 +08:00 [ERR] Failed executing DbCommand (192ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTimeOffset), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 16), @p5='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [BirthDate], [BirthPlace], [Email], [Password], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2020-06-17 22:33:23.965 +08:00 [ERR] An exception occurred in the database while saving changes for context type 'MuchBlog.Infrastructure.Data.BlogDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:63c5f1e0-066e-442d-a81c-10beac0ede38
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:63c5f1e0-066e-442d-a81c-10beac0ede38
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2020-06-17 22:33:24.623 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 944.5843ms
2020-06-17 22:33:24.667 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:33:24.694 +08:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:63c5f1e0-066e-442d-a81c-10beac0ede38
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at MuchBlog.Domain.Services.RepositoryBase`2.SaveAsync() in D:\AspNetCore\MuchBlog\MuchBlog.Domain\Services\RepositoryBase.cs:line 65
   at MuchBlog.Api.Controllers.UserController.CreateUser(UserForCreationDto userForCreationDto) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Controllers\UserController.cs:line 58
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 22:33:24.806 +08:00 [INF] Request finished in 1247.5398ms 500 text/plain
2020-06-17 22:35:39.260 +08:00 [INF] Starting web host
2020-06-17 22:35:41.263 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:35:41.280 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:35:41.297 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:35:41.301 +08:00 [INF] Hosting environment: Development
2020-06-17 22:35:41.303 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:35:54.752 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/users application/json 159
2020-06-17 22:35:54.809 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:35:55.017 +08:00 [INF] Route matched with {action = "CreateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(MuchBlog.Api.Dtos.UserForCreationDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:35:57.240 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:35:58.694 +08:00 [ERR] Failed executing DbCommand (456ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTimeOffset), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 16), @p5='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [BirthDate], [BirthPlace], [Email], [Password], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2020-06-17 22:35:59.017 +08:00 [ERR] An exception occurred in the database while saving changes for context type 'MuchBlog.Infrastructure.Data.BlogDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7897a1e6-dd03-4cf2-9faf-66c6be452959
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7897a1e6-dd03-4cf2-9faf-66c6be452959
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2020-06-17 22:35:59.853 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api) in 4821.5299ms
2020-06-17 22:35:59.860 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.CreateUser (MuchBlog.Api)'
2020-06-17 22:35:59.876 +08:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'UserName', table 'MuchBlogDb.dbo.Users'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7897a1e6-dd03-4cf2-9faf-66c6be452959
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at MuchBlog.Domain.Services.RepositoryBase`2.SaveAsync() in D:\AspNetCore\MuchBlog\MuchBlog.Domain\Services\RepositoryBase.cs:line 65
   at MuchBlog.Api.Controllers.UserController.CreateUser(UserForCreationDto userForCreationDto) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Controllers\UserController.cs:line 63
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 22:36:00.191 +08:00 [INF] Request finished in 5444.1559ms 500 text/plain
2020-06-17 22:37:45.518 +08:00 [INF] Starting web host
2020-06-17 22:37:47.616 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:37:47.629 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:37:47.635 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:37:47.638 +08:00 [INF] Hosting environment: Development
2020-06-17 22:37:47.643 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:38:00.639 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 159
2020-06-17 22:38:00.699 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:38:00.790 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:38:02.744 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:38:04.109 +08:00 [INF] Executed DbCommand (69ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:38:04.213 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:38:04.502 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 3697.6603ms
2020-06-17 22:38:04.626 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:38:04.648 +08:00 [INF] Request finished in 4015.4211ms 200 application/json; charset=utf-8
2020-06-17 22:38:30.379 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 159
2020-06-17 22:39:34.904 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4 application/json 159
2020-06-17 22:38:51.668 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 159
2020-06-17 22:39:09.506 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4 application/json 159
2020-06-17 22:39:48.949 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 159
2020-06-17 22:39:54.674 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:54.675 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:54.676 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:54.677 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:54.678 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:39:54.712 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:39:54.714 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:39:54.714 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:39:54.714 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:39:54.714 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:39:54.765 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:39:54.765 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:39:54.765 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:39:54.766 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:39:54.766 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:39:54.789 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:39:54.806 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:39:54.811 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 96.1814ms
2020-06-17 22:39:54.815 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:39:54.819 +08:00 [INF] Request finished in 5869.8362ms 200 application/json; charset=utf-8
2020-06-17 22:39:55.152 +08:00 [INF] Executed DbCommand (69ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:39:55.152 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:39:55.152 +08:00 [INF] Executed DbCommand (71ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:39:55.152 +08:00 [INF] Executed DbCommand (119ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:39:55.190 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:39:55.190 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:39:55.190 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:39:55.190 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:39:55.193 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 442.6608ms
2020-06-17 22:39:55.195 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 460.8571ms
2020-06-17 22:39:55.197 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 473.1108ms
2020-06-17 22:39:55.201 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 473.0353ms
2020-06-17 22:39:55.207 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:55.209 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:55.212 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:55.216 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:39:55.228 +08:00 [INF] Request finished in 45723.3869ms 200 application/json; charset=utf-8
2020-06-17 22:39:55.228 +08:00 [INF] Request finished in 63560.3462ms 200 application/json; charset=utf-8
2020-06-17 22:39:55.232 +08:00 [INF] Request finished in 84853.7985ms 200 application/json; charset=utf-8
2020-06-17 22:39:55.247 +08:00 [INF] Request finished in 20342.7246ms 200 application/json; charset=utf-8
2020-06-17 22:40:03.182 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 159
2020-06-17 22:40:03.184 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:40:03.186 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:40:03.192 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:40:03.197 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:40:03.201 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:40:03.205 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 15.0938ms
2020-06-17 22:40:03.209 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:40:03.213 +08:00 [INF] Request finished in 31.498ms 200 application/json; charset=utf-8
2020-06-17 22:40:11.152 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 159
2020-06-17 22:40:11.156 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:40:11.164 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:40:11.178 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:40:11.192 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:40:11.199 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:40:11.205 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 31.5741ms
2020-06-17 22:40:11.216 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:40:11.228 +08:00 [INF] Request finished in 76.6415ms 200 application/json; charset=utf-8
2020-06-17 22:41:11.288 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:41:11.292 +08:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2020-06-17 22:41:11.295 +08:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2020-06-17 22:41:11.298 +08:00 [INF] Request finished in 9.5579ms 405 
2020-06-17 22:41:45.919 +08:00 [INF] Starting web host
2020-06-17 22:41:49.868 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:41:49.892 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:41:49.894 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:41:49.895 +08:00 [INF] Hosting environment: Development
2020-06-17 22:41:49.897 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:41:53.414 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:41:53.476 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:41:53.567 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:41:55.388 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:41:57.315 +08:00 [INF] Executed DbCommand (188ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:41:57.464 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:41:57.688 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 4076.1017ms
2020-06-17 22:41:57.692 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:41:57.702 +08:00 [INF] Request finished in 4291.7462ms 200 application/json; charset=utf-8
2020-06-17 22:42:05.465 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:42:05.481 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:42:05.501 +08:00 [INF] Route matched with {action = "UpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUser(System.Guid, MuchBlog.Api.Dtos.UserForUpdateDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:42:05.619 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:42:05.762 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:42:06.183 +08:00 [INF] Executed DbCommand (180ms) [Parameters=[@p5='?' (DbType = Guid), @p0='?' (DbType = DateTimeOffset), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 16), @p4='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [BirthDate] = @p0, [BirthPlace] = @p1, [Email] = @p2, [Password] = @p3, [UserName] = @p4
WHERE [Id] = @p5;
SELECT @@ROWCOUNT;
2020-06-17 22:42:06.240 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 22:42:06.242 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api) in 737.9456ms
2020-06-17 22:42:06.245 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:42:06.249 +08:00 [INF] Request finished in 784.2824ms 204 
2020-06-17 22:43:05.490 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:43:05.493 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:43:05.504 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:43:05.531 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:43:05.546 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:43:05.553 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:43:05.559 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 51.7282ms
2020-06-17 22:43:05.562 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:43:05.564 +08:00 [INF] Request finished in 74.4873ms 200 application/json; charset=utf-8
2020-06-17 22:43:18.993 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:43:19.001 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:43:19.013 +08:00 [INF] Route matched with {action = "UpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUser(System.Guid, MuchBlog.Api.Dtos.UserForUpdateDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:43:19.042 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:43:19.177 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:43:19.300 +08:00 [INF] Executed DbCommand (109ms) [Parameters=[@p5='?' (DbType = Guid), @p0='?' (DbType = DateTimeOffset), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 16), @p4='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [BirthDate] = @p0, [BirthPlace] = @p1, [Email] = @p2, [Password] = @p3, [UserName] = @p4
WHERE [Id] = @p5;
SELECT @@ROWCOUNT;
2020-06-17 22:43:19.317 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 22:43:19.318 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api) in 279.9317ms
2020-06-17 22:43:19.322 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:43:19.327 +08:00 [INF] Request finished in 334.2487ms 204 
2020-06-17 22:43:44.057 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:43:44.061 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:43:44.064 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:43:44.074 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:43:44.090 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:43:44.097 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:43:44.101 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 29.1449ms
2020-06-17 22:43:44.103 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:43:44.110 +08:00 [INF] Request finished in 52.6579ms 200 application/json; charset=utf-8
2020-06-17 22:43:54.759 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 175
2020-06-17 22:43:54.780 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:43:54.799 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:43:54.808 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:43:54.857 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 22:43:54.870 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 22:43:54.889 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 83.8575ms
2020-06-17 22:43:54.894 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 22:43:54.898 +08:00 [INF] Request finished in 139.4114ms 200 application/json; charset=utf-8
2020-06-17 22:44:18.262 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:44:18.306 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:44:18.310 +08:00 [INF] Route matched with {action = "UpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUser(System.Guid, MuchBlog.Api.Dtos.UserForUpdateDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:44:18.320 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:44:18.330 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:44:18.344 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p5='?' (DbType = Guid), @p0='?' (DbType = DateTimeOffset), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 16), @p4='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [BirthDate] = @p0, [BirthPlace] = @p1, [Email] = @p2, [Password] = @p3, [UserName] = @p4
WHERE [Id] = @p5;
SELECT @@ROWCOUNT;
2020-06-17 22:44:18.350 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 22:44:18.352 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api) in 34.7502ms
2020-06-17 22:44:18.359 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:44:18.362 +08:00 [INF] Request finished in 100.1935ms 204 
2020-06-17 22:44:27.078 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 175
2020-06-17 22:44:27.103 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:44:27.122 +08:00 [INF] Route matched with {action = "UpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUser(System.Guid, MuchBlog.Api.Dtos.UserForUpdateDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:44:27.143 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:44:27.181 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:46:41.468 +08:00 [INF] Starting web host
2020-06-17 22:46:43.966 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:46:44.182 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:46:44.191 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:46:44.193 +08:00 [INF] Hosting environment: Development
2020-06-17 22:46:44.194 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:47:10.821 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 140
2020-06-17 22:47:10.885 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:47:11.207 +08:00 [INF] Route matched with {action = "UpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUser(System.Guid, MuchBlog.Api.Dtos.UserForUpdateDto) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:47:13.253 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:47:14.178 +08:00 [INF] Executed DbCommand (132ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:47:21.116 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@p5='?' (DbType = Guid), @p0='?' (DbType = DateTimeOffset), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 16), @p4='?' (Size = 20)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [BirthDate] = @p0, [BirthPlace] = @p1, [Email] = @p2, [Password] = @p3, [UserName] = @p4
WHERE [Id] = @p5;
SELECT @@ROWCOUNT;
2020-06-17 22:47:21.202 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 22:47:21.213 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api) in 9993.7295ms
2020-06-17 22:47:21.217 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.UpdateUser (MuchBlog.Api)'
2020-06-17 22:47:21.245 +08:00 [INF] Request finished in 10431.7491ms 204 
2020-06-17 22:47:35.018 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 140
2020-06-17 22:47:35.020 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:47:35.030 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:47:35.090 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:47:35.106 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:47:35.133 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:47:35.236 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 202.8294ms
2020-06-17 22:47:35.268 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:47:35.277 +08:00 [INF] Request finished in 258.7345ms 200 application/json; charset=utf-8
2020-06-17 22:49:11.740 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 103
2020-06-17 22:49:12.202 +08:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2020-06-17 22:49:12.285 +08:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2020-06-17 22:49:12.294 +08:00 [INF] Request finished in 558.8172ms 405 
2020-06-17 22:49:37.639 +08:00 [INF] Starting web host
2020-06-17 22:49:40.346 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 22:49:40.354 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 22:49:40.356 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 22:49:40.358 +08:00 [INF] Hosting environment: Development
2020-06-17 22:49:40.360 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 22:49:44.688 +08:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 103
2020-06-17 22:49:44.756 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.PartiallyUpdateUser (MuchBlog.Api)'
2020-06-17 22:49:45.163 +08:00 [INF] Route matched with {action = "PartiallyUpdateUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PartiallyUpdateUser(System.Guid, Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1[MuchBlog.Api.Dtos.UserForUpdateDto]) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:49:47.292 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:49:49.386 +08:00 [INF] Executed DbCommand (403ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:49:49.960 +08:00 [INF] Executed DbCommand (193ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = DateTimeOffset)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Users] SET [BirthDate] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
2020-06-17 22:49:50.032 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 22:49:50.046 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.PartiallyUpdateUser (MuchBlog.Api) in 4869.5334ms
2020-06-17 22:49:50.050 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.PartiallyUpdateUser (MuchBlog.Api)'
2020-06-17 22:49:50.084 +08:00 [INF] Request finished in 5399.534ms 204 
2020-06-17 22:49:54.995 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 103
2020-06-17 22:49:55.001 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:49:55.015 +08:00 [INF] Route matched with {action = "GetUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MuchBlog.Api.Dtos.UserDto]] GetUserAsync(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 22:49:55.108 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 22:49:55.130 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 22:49:55.152 +08:00 [INF] Executing ObjectResult, writing value of type 'MuchBlog.Api.Dtos.UserDto'.
2020-06-17 22:49:55.204 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api) in 161.7679ms
2020-06-17 22:49:55.211 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUserAsync (MuchBlog.Api)'
2020-06-17 22:49:55.218 +08:00 [INF] Request finished in 222.6337ms 200 application/json; charset=utf-8
2020-06-17 23:33:21.588 +08:00 [INF] Starting web host
2020-06-17 23:33:26.379 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 23:33:26.386 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 23:33:26.388 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 23:33:26.389 +08:00 [INF] Hosting environment: Development
2020-06-17 23:33:26.391 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 23:42:24.260 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e/essays application/json 103
2020-06-17 23:42:24.323 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:42:24.981 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:42:26.277 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:42:29.910 +08:00 [INF] Executed DbCommand (127ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:42:30.075 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Content], [e].[CreateDate], [e].[LastModified], [e].[Title], [e].[UserId]
FROM [Essays] AS [e]
WHERE [e].[UserId] = @__userId_0
2020-06-17 23:42:30.124 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.EssayDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:42:30.312 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api) in 5312.7633ms
2020-06-17 23:42:30.317 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:42:30.332 +08:00 [INF] Request finished in 6077.812ms 200 application/json; charset=utf-8
2020-06-17 23:42:41.901 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 103
2020-06-17 23:42:41.904 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:42:41.913 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 23:42:41.959 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:42:41.988 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 23:42:41.999 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:42:42.031 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 113.5915ms
2020-06-17 23:42:42.037 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:42:42.040 +08:00 [INF] Request finished in 139.0092ms 200 application/json; charset=utf-8
2020-06-17 23:42:56.920 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:42:56.925 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:42:56.931 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:42:56.951 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:42:56.964 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:42:56.974 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Content], [e].[CreateDate], [e].[LastModified], [e].[Title], [e].[UserId]
FROM [Essays] AS [e]
WHERE [e].[UserId] = @__userId_0
2020-06-17 23:42:57.015 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.EssayDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:42:57.022 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api) in 83.5414ms
2020-06-17 23:42:57.026 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:42:57.030 +08:00 [INF] Request finished in 110.2969ms 200 application/json; charset=utf-8
2020-06-17 23:43:45.608 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 103
2020-06-17 23:43:45.613 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:43:45.618 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 23:43:45.628 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:43:45.635 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 23:43:45.643 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:43:45.648 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 23.2858ms
2020-06-17 23:43:45.651 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:43:45.655 +08:00 [INF] Request finished in 46.8365ms 200 application/json; charset=utf-8
2020-06-17 23:43:55.370 +08:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:5001/api/users/b407bc4a-7bff-4c36-907c-2f0b4069fc3e application/json 103
2020-06-17 23:43:55.382 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.DeleteUser (MuchBlog.Api)'
2020-06-17 23:43:55.404 +08:00 [INF] Route matched with {action = "DeleteUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteUser(System.Guid) on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 23:43:55.412 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:43:55.421 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:43:55.565 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Users]
WHERE [Id] = @p0;
SELECT @@ROWCOUNT;
2020-06-17 23:43:55.600 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 204
2020-06-17 23:43:55.603 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.DeleteUser (MuchBlog.Api) in 192.4108ms
2020-06-17 23:43:55.606 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.DeleteUser (MuchBlog.Api)'
2020-06-17 23:43:55.612 +08:00 [INF] Request finished in 242.1914ms 204 
2020-06-17 23:44:03.211 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users application/json 103
2020-06-17 23:44:03.220 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:44:03.226 +08:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.UserDto]]] GetUsersAsync() on controller MuchBlog.Api.Controllers.UserController (MuchBlog.Api).
2020-06-17 23:44:03.241 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:44:03.251 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
2020-06-17 23:44:03.259 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.UserDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:44:03.264 +08:00 [INF] Executed action MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api) in 27.5535ms
2020-06-17 23:44:03.267 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.UserController.GetUsersAsync (MuchBlog.Api)'
2020-06-17 23:44:03.270 +08:00 [INF] Request finished in 59.9468ms 200 application/json; charset=utf-8
2020-06-17 23:44:17.464 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:44:17.473 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:44:17.478 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:44:17.504 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:44:17.515 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:44:17.531 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Content], [e].[CreateDate], [e].[LastModified], [e].[Title], [e].[UserId]
FROM [Essays] AS [e]
WHERE [e].[UserId] = @__userId_0
2020-06-17 23:44:17.543 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.EssayDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:44:17.547 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api) in 47.701ms
2020-06-17 23:44:17.557 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:44:17.561 +08:00 [INF] Request finished in 97.0556ms 200 application/json; charset=utf-8
2020-06-17 23:44:24.353 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:44:24.361 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:44:24.374 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:44:24.628 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 248.3761ms
2020-06-17 23:44:24.634 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:44:24.644 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:44:24.775 +08:00 [INF] Request finished in 421.6509ms 500 text/plain
2020-06-17 23:44:30.473 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:44:30.491 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:44:30.503 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:44:30.591 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 78.1946ms
2020-06-17 23:44:30.595 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:44:30.598 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:44:30.621 +08:00 [INF] Request finished in 148.6928ms 500 text/plain
2020-06-17 23:45:04.212 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:45:04.223 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:04.229 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:45:04.301 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 64.2481ms
2020-06-17 23:45:04.311 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:04.315 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:45:04.345 +08:00 [INF] Request finished in 133.0642ms 500 text/plain
2020-06-17 23:45:06.187 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:45:06.194 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:06.209 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:45:06.304 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 82.7929ms
2020-06-17 23:45:06.422 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:06.430 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:45:06.470 +08:00 [INF] Request finished in 282.9159ms 500 text/plain
2020-06-17 23:45:31.641 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:45:31.645 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:31.649 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:45:31.726 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 62.3933ms
2020-06-17 23:45:31.731 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:45:31.735 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:45:31.761 +08:00 [INF] Request finished in 119.6037ms 500 text/plain
2020-06-17 23:45:39.049 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:45:39.053 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:45:39.059 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:45:39.069 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:45:39.088 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:45:59.413 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Content], [e].[CreateDate], [e].[LastModified], [e].[Title], [e].[UserId]
FROM [Essays] AS [e]
WHERE [e].[UserId] = @__userId_0
2020-06-17 23:45:59.423 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.EssayDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:45:59.429 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api) in 20362.0396ms
2020-06-17 23:45:59.439 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:45:59.451 +08:00 [INF] Request finished in 20402.226ms 200 application/json; charset=utf-8
2020-06-17 23:46:07.616 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/essays application/json 103
2020-06-17 23:46:07.621 +08:00 [INF] Request finished in 4.7619ms 404 
2020-06-17 23:46:09.731 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/essays application/json 103
2020-06-17 23:46:09.745 +08:00 [INF] Request finished in 13.6222ms 404 
2020-06-17 23:46:25.522 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:46:25.556 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:46:25.569 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:46:25.589 +08:00 [INF] Entity Framework Core 3.1.5 initialized 'BlogDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 23:46:25.600 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[BirthDate], [u].[BirthPlace], [u].[Email], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2020-06-17 23:46:36.061 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Content], [e].[CreateDate], [e].[LastModified], [e].[Title], [e].[UserId]
FROM [Essays] AS [e]
WHERE [e].[UserId] = @__userId_0
2020-06-17 23:46:36.155 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MuchBlog.Api.Dtos.EssayDto, MuchBlog.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 23:46:36.175 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api) in 10587.7084ms
2020-06-17 23:46:36.178 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:46:36.188 +08:00 [INF] Request finished in 10665.763ms 200 application/json; charset=utf-8
2020-06-17 23:46:50.224 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:46:50.230 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:46:50.239 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:46:50.340 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 90.5032ms
2020-06-17 23:46:50.352 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:46:50.358 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:46:50.383 +08:00 [INF] Request finished in 159.7782ms 500 text/plain
2020-06-17 23:48:00.777 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:48:00.781 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:48:00.785 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:48:10.777 +08:00 [INF] Executed action MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api) in 9983.106ms
2020-06-17 23:48:10.786 +08:00 [INF] Executed endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:48:10.795 +08:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains no matching element
   at System.Linq.ThrowHelper.ThrowNoMatchException()
   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source, Func`2 predicate)
   at MuchBlog.Api.Filters.CheckUserExistFilterAttribute.OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) in D:\AspNetCore\MuchBlog\MuchBlog.Api\Filters\CheckUserExistFilterAttribute.cs:line 27
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:48:10.814 +08:00 [INF] Request finished in 10037.5808ms 500 text/plain
2020-06-17 23:48:35.227 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e7 application/json 103
2020-06-17 23:48:35.233 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssayAsync (MuchBlog.Api)'
2020-06-17 23:48:35.238 +08:00 [INF] Route matched with {action = "GetEssay", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssayAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:50:35.330 +08:00 [INF] Starting web host
2020-06-17 23:50:37.254 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 23:50:37.259 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 23:50:37.261 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 23:50:37.262 +08:00 [INF] Hosting environment: Development
2020-06-17 23:50:37.263 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 23:50:40.125 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:50:40.170 +08:00 [INF] Executing endpoint 'MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)'
2020-06-17 23:50:40.444 +08:00 [INF] Route matched with {action = "GetEssays", controller = "Essay"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[MuchBlog.Api.Dtos.EssayDto]]] GetEssaysAsync(System.Guid) on controller MuchBlog.Api.Controllers.EssayController (MuchBlog.Api).
2020-06-17 23:51:29.343 +08:00 [INF] Starting web host
2020-06-17 23:51:31.040 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 23:51:31.044 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 23:51:31.045 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 23:51:31.046 +08:00 [INF] Hosting environment: Development
2020-06-17 23:51:31.047 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 23:51:48.174 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/users/f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4/essays application/json 103
2020-06-17 23:51:48.226 +08:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)
MuchBlog.Api.Controllers.EssayController.GetEssaysAsync (MuchBlog.Api)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 23:51:48.393 +08:00 [INF] Request finished in 220.771ms 500 text/plain
2020-06-17 23:54:01.155 +08:00 [INF] Starting web host
2020-06-17 23:54:02.495 +08:00 [INF] Now listening on: https://localhost:5001
2020-06-17 23:54:02.500 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-17 23:54:02.501 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-17 23:54:02.502 +08:00 [INF] Hosting environment: Development
2020-06-17 23:54:02.503 +08:00 [INF] Content root path: D:\AspNetCore\MuchBlog\MuchBlog.Api
2020-06-17 23:54:09.305 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/essays application/json 103
2020-06-17 23:54:09.361 +08:00 [INF] Request finished in 61.4345ms 404 
2020-06-17 23:54:11.389 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/essays application/json 103
2020-06-17 23:54:11.391 +08:00 [INF] Request finished in 3.279ms 404 
2020-06-17 23:54:12.307 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/essays application/json 103
2020-06-17 23:54:12.311 +08:00 [INF] Request finished in 3.9205ms 404 
